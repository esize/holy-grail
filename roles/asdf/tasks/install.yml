- name: "install asdf global dependencies with apt"
  apt:
    name:
      - unzip
      - git
      - curl
      - autoconf
      - automake
      - gcc
      - g++
      - make
      - patch
      - pkg-config
      - binutils
      - libtool
      - bison
      - libreadline-dev
    install_recommends: no
    cache_valid_time: 86400
  become: true
  retries: 5
  register: apt_deps_result
  until: apt_deps_result is succeeded

- name: "ensure asdf_dir presence and ownership"
  file:
    path: "{{ asdf_dir }}"
    owner: "{{ asdf_user }}"
    group: "{{ asdf_group }}"
    state: directory
  become: true

- name: get current asdf version
  shell: asdf -v
  environment: "{{ asdf_shell_env }}"
  changed_when: false
  register: raw_asdf_version

- name: set current asdf version
  set_fact:
    asdf_current_version: "{{ raw_asdf_version.stdout | regex_search('v[0-9]+\\.[0-9]+\\.[0-9]+') }}"

- name: output
  debug:
    var: asdf_current_version


- name: download and install asdf
  when: asdf_current_version != asdf_version
  block:
  - name: download asdf
    get_url:
      url: "https://github.com/asdf-vm/asdf/releases/download/{{ asdf_version }}/asdf-{{ asdf_version }}-linux-amd64.tar.gz"
      dest: "{{ asdf_dir }}"
  - name: create bin folder
    file:
      path: "{{ asdf_bin_dir }}"
      state: directory
      owner: "{{ asdf_user }}"
      group: "{{ asdf_group }}"

  - name: extract asdf
    unarchive:
      src: "{{ asdf_dir }}/asdf-{{ asdf_version }}-linux-amd64.tar.gz"
      dest: "{{ asdf_bin_dir }}"
      remote_src: true
      creates: "{{ asdf_bin }}"

  - name: clean asdf dir
    file:
      path: "{{ asdf_dir }}/asdf-{{ asdf_version }}-linux-amd64.tar.gz"
      state: absent

  - name: update asdf version
    become: yes
    become_user: "{{ asdf_user }}"
    shell: asdf --version
    environment: "{{ asdf_shell_env }}"
    register: asdf_version_output
    changed_when: false
    failed_when: asdf_version_output.rc != 0

  - name: Set asdf_current_version fact
    set_fact:
      asdf_current_version: "{{ asdf_version_output.stdout | trim }}"

