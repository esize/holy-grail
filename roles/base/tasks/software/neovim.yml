- name: Add neovim repository
  ansible.builtin.apt_repository:
    repo: 'ppa:neovim-ppa/stable'

- name: Install neovim
  ansible.builtin.apt:
    update_cache: yes
    pkg:
      - neovim

- name: Clone neovim config
  ansible.builtin.git:
    repo: 'https://github.com/esize/my.nvim.git'
    dest: /home/evan/.config/nvim
    clone: yes
    update: yes
    force: yes

- name: Own neovim directory
  ansible.builtin.file:
    path: /home/evan/.config/nvim
    owner: evan
    group: evan
    recurse: true

- name: Install c compiler
  ansible.builtin.apt:
    pkg:
      - build-essential

- stat:
    path: /home/evan/.nvm
  register: nvm_path

- name: Setup NVM
  become: yes
  become_flags: -i 
  become_user: evan 
  block:
    - name: Install nvm
      shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash 
      args:
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

- name: add {{extra_path}} to path
  lineinfile:
    dest: /etc/environment
    state: present
    backrefs: yes
    regexp: 'PATH=(["]*)((?!.*?"{{extra_path}}").*?)(["]*)$'
    line: 'PATH=\1\2:"{{extra_path}}"\3'
  vars:
    extra_path: "$HOME/.nvm/nvm.sh"


  when: nvm_path.stat.exists == false

- name: Install node version using NVM
  become: yes
  become_flags: -i 
  become_user: evan 
  block:
  - name: Install node versions using loop
    shell: >
      bash -c "source $HOME/.nvm/nvm.sh && nvm install v{{ item }}"
    args:
      executable: /bin/bash
    loop:
      - 22.14.0
  - name: Install TypeScript
    shell: >
      bash -c "source $HOME/.nvm/nvm.sh && npm install -g typescript"
    args:
      executable: /bin/bash


- name: Ensure Neovim plugins are installed using Lazy.nvim
  become: yes
  become_flags: -i
  become_user: evan
  shell: >
    nvim --headless "+Lazy! sync" +qa
  args:
    executable: /bin/bash
  changed_when: false